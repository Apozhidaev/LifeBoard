<Application x:Class="LifeBoard.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="OnStartup" Exit="OnExit">
    <Application.Resources>

        <!-- Стили Button -->

        <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Margin" Value="10,5,0,0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="56"/>
            <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
            <Setter Property="AutomationProperties.Name" Value="Back"/>
            <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid Margin="-1,-16,0,0">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="White"/>
                                <TextBlock x:Name="NormalGlyph" Text="&#xE071;" Foreground="#FF1E395B"/>
                                <TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="White" Opacity="0"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="BackgroundGlyph" Value="#FFF4FBFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" TargetName="BackgroundGlyph" Value="#FF1E395B"/>
                                <Setter Property="Opacity" TargetName="ArrowGlyph" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    	<Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
    		<Setter Property="FocusVisualStyle">
    			<Setter.Value>
    				<Style>
    					<Setter Property="Control.Template">
    						<Setter.Value>
    							<ControlTemplate>
    								<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="DimGray" StrokeThickness="1" StrokeDashArray="1 2"/>
    							</ControlTemplate>
    						</Setter.Value>
    					</Setter>
    				</Style>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Background" Value="#FFDDDDDD"/>
    		<Setter Property="BorderBrush" Value="#FF707070"/>
    		<Setter Property="Foreground" Value="Black"/>
    		<Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsDefaulted" Value="True">
    							<Setter Property="BorderBrush" TargetName="border" Value="DimGray"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="True">
    							<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
    						</Trigger>
    						<Trigger Property="IsPressed" Value="True">
    							<Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="False">
    							<Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
    							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
        </Style>


        <!-- Стили Menu -->

        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <TextBlock Text="{TemplateBinding Header}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource SubheaderTextStyle}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF4FBFF"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFF4FBFF"/>
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF1E395B"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#FFF4FBFF"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFF4FBFF"/>
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Black"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="AliceBlue"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="AliceBlue"/>
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF1E395B"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        	<Setter Property="Background" Value="#FFEAF1FB"/>
        	<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        	<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        	<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        	<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        	<Setter Property="Foreground" Value="Black"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Menu}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        					<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        

        <!-- Стили TextBlock -->
        
        <Style x:Key="BasicTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Typography.StylisticSet20" Value="True"/>
            <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
            <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
        </Style>
        
        <Style x:Key="BaselineTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BasicTextStyle}">
            <Setter Property="LineHeight" Value="20"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        </Style>
        
        <Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="LineHeight" Value="40"/>
        </Style>
        
        <Style x:Key="SubheaderTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="LineHeight" Value="30"/>
        </Style>

        <Style x:Key="BoldTitleTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="SubtitleTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="BodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="GroupHeaderTextStyleBase" TargetType="{x:Type TextBlock}">
            <Setter Property="TextTrimming" Value="WordEllipsis"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="Typography.StylisticSet20" Value="True"/>
            <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
            <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="LineHeight" Value="30"/>
        </Style>

        <Style x:Key="GroupHeaderTextStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource GroupHeaderTextStyleBase}">
            <Setter Property="FontSize" Value="26.667"/>
        </Style>

        <Style x:Key="SubGroupHeaderTextStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource GroupHeaderTextStyleBase}">
            <Setter Property="FontSize" Value="18"/>
        </Style>

        <Style x:Key="GroupTextStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource GroupHeaderTextStyleBase}">
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="BodyGroupTextStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource GroupHeaderTextStyleBase}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>

        <Style x:Key="GridGroupTextStyle" TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource GroupTextStyle}">
            <Setter Property="Margin" Value="10,0,10,0"/>
        </Style>

    </Application.Resources>
</Application>
